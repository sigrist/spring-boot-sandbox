// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: "spring-boot"
apply plugin: "nebula.ospackage"

defaultTasks 'clean', 'build', 'buildDeb'


// Set the project version
version = '0.0.2-SNAPSHOT'


// Where to look for the dependencies
repositories {
        jcenter()
        mavenCentral()
}

// Our dependencies
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE")
}

// Configuration for the build script
buildscript {
    ext {
        osPackageVersion = "3.4.0"
        springBootVersion = "1.4.0.RELEASE"
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("com.netflix.nebula:gradle-ospackage-plugin:${osPackageVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Spring Boot configuration
// We want a executable jar file
springBoot {
    // Allows us to run the jar directly from the command line
    executable = true
}

// Netflix Nebula configuration
ospackage {
	
    // Uses the main project version
    version = "${project.version}"

    /* Could be anything - in our production builds,
       this is set to the git commit hash */
    release = 1

    os = LINUX
    type = BINARY
    arch = 'all'

	// Setup the scripts to run pre/post install/uninstall
	preInstall file("src/main/scripts/preInstall.sh")
    postInstall file("src/main/scripts/postInstall.sh")
    preUninstall file("src/main/scripts/preUninstall.sh")
    postUninstall file("src/main/scripts/postUninstall.sh")

	// Sets our working directory and permissions, basically
    into "/opt/local/venturus"
    user "venturus"
    permissionGroup "venturus"
    
    // For the jar files, we will remove the version from the name
    // Change the permission to 755
    // And put it in the bin folder
    from(jar.outputs.files) {
        // Strip the version from the jar filename
        rename { String fileName ->
            fileName.replace("-${project.version}", "")
        }
        fileMode 0755
        into "bin"
    }
}

// Configuration for the DEB file 
buildDeb {
    user "venturus"
    permissionGroup "venturus"
    
    // Create a symbolic link to execute as a service
    link("/etc/init.d/spring-boot-sandbox", "/opt/local/venturus/bin/spring-boot-sandbox.jar")
    
}